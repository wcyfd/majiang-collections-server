// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Gm.proto

package com.randioo.mahjong_public_server.protocol;

public final class Gm {
  private Gm() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class GmEnvVarsRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use GmEnvVarsRequest.newBuilder() to construct.
    private GmEnvVarsRequest() {
      initFields();
    }
    private GmEnvVarsRequest(boolean noInit) {}
    
    private static final GmEnvVarsRequest defaultInstance;
    public static GmEnvVarsRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public GmEnvVarsRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.mahjong_public_server.protocol.Gm.internal_static_com_randioo_mahjong_public_server_protocol_GmEnvVarsRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.mahjong_public_server.protocol.Gm.internal_static_com_randioo_mahjong_public_server_protocol_GmEnvVarsRequest_fieldAccessorTable;
    }
    
    // optional string roomId = 1;
    public static final int ROOMID_FIELD_NUMBER = 1;
    private boolean hasRoomId;
    private java.lang.String roomId_ = "";
    public boolean hasRoomId() { return hasRoomId; }
    public java.lang.String getRoomId() { return roomId_; }
    
    // repeated .com.randioo.mahjong_public_server.protocol.EnvVarsData envVarsData = 2;
    public static final int ENVVARSDATA_FIELD_NUMBER = 2;
    private java.util.List<com.randioo.mahjong_public_server.protocol.Entity.EnvVarsData> envVarsData_ =
      java.util.Collections.emptyList();
    public java.util.List<com.randioo.mahjong_public_server.protocol.Entity.EnvVarsData> getEnvVarsDataList() {
      return envVarsData_;
    }
    public int getEnvVarsDataCount() { return envVarsData_.size(); }
    public com.randioo.mahjong_public_server.protocol.Entity.EnvVarsData getEnvVarsData(int index) {
      return envVarsData_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasRoomId()) {
        output.writeString(1, getRoomId());
      }
      for (com.randioo.mahjong_public_server.protocol.Entity.EnvVarsData element : getEnvVarsDataList()) {
        output.writeMessage(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasRoomId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getRoomId());
      }
      for (com.randioo.mahjong_public_server.protocol.Entity.EnvVarsData element : getEnvVarsDataList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsRequest result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsRequest();
        return builder;
      }
      
      protected com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsRequest.getDescriptor();
      }
      
      public com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsRequest getDefaultInstanceForType() {
        return com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.envVarsData_ != java.util.Collections.EMPTY_LIST) {
          result.envVarsData_ =
            java.util.Collections.unmodifiableList(result.envVarsData_);
        }
        com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsRequest) {
          return mergeFrom((com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsRequest other) {
        if (other == com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsRequest.getDefaultInstance()) return this;
        if (other.hasRoomId()) {
          setRoomId(other.getRoomId());
        }
        if (!other.envVarsData_.isEmpty()) {
          if (result.envVarsData_.isEmpty()) {
            result.envVarsData_ = new java.util.ArrayList<com.randioo.mahjong_public_server.protocol.Entity.EnvVarsData>();
          }
          result.envVarsData_.addAll(other.envVarsData_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setRoomId(input.readString());
              break;
            }
            case 18: {
              com.randioo.mahjong_public_server.protocol.Entity.EnvVarsData.Builder subBuilder = com.randioo.mahjong_public_server.protocol.Entity.EnvVarsData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addEnvVarsData(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional string roomId = 1;
      public boolean hasRoomId() {
        return result.hasRoomId();
      }
      public java.lang.String getRoomId() {
        return result.getRoomId();
      }
      public Builder setRoomId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasRoomId = true;
        result.roomId_ = value;
        return this;
      }
      public Builder clearRoomId() {
        result.hasRoomId = false;
        result.roomId_ = getDefaultInstance().getRoomId();
        return this;
      }
      
      // repeated .com.randioo.mahjong_public_server.protocol.EnvVarsData envVarsData = 2;
      public java.util.List<com.randioo.mahjong_public_server.protocol.Entity.EnvVarsData> getEnvVarsDataList() {
        return java.util.Collections.unmodifiableList(result.envVarsData_);
      }
      public int getEnvVarsDataCount() {
        return result.getEnvVarsDataCount();
      }
      public com.randioo.mahjong_public_server.protocol.Entity.EnvVarsData getEnvVarsData(int index) {
        return result.getEnvVarsData(index);
      }
      public Builder setEnvVarsData(int index, com.randioo.mahjong_public_server.protocol.Entity.EnvVarsData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.envVarsData_.set(index, value);
        return this;
      }
      public Builder setEnvVarsData(int index, com.randioo.mahjong_public_server.protocol.Entity.EnvVarsData.Builder builderForValue) {
        result.envVarsData_.set(index, builderForValue.build());
        return this;
      }
      public Builder addEnvVarsData(com.randioo.mahjong_public_server.protocol.Entity.EnvVarsData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.envVarsData_.isEmpty()) {
          result.envVarsData_ = new java.util.ArrayList<com.randioo.mahjong_public_server.protocol.Entity.EnvVarsData>();
        }
        result.envVarsData_.add(value);
        return this;
      }
      public Builder addEnvVarsData(com.randioo.mahjong_public_server.protocol.Entity.EnvVarsData.Builder builderForValue) {
        if (result.envVarsData_.isEmpty()) {
          result.envVarsData_ = new java.util.ArrayList<com.randioo.mahjong_public_server.protocol.Entity.EnvVarsData>();
        }
        result.envVarsData_.add(builderForValue.build());
        return this;
      }
      public Builder addAllEnvVarsData(
          java.lang.Iterable<? extends com.randioo.mahjong_public_server.protocol.Entity.EnvVarsData> values) {
        if (result.envVarsData_.isEmpty()) {
          result.envVarsData_ = new java.util.ArrayList<com.randioo.mahjong_public_server.protocol.Entity.EnvVarsData>();
        }
        super.addAll(values, result.envVarsData_);
        return this;
      }
      public Builder clearEnvVarsData() {
        result.envVarsData_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.GmEnvVarsRequest)
    }
    
    static {
      defaultInstance = new GmEnvVarsRequest(true);
      com.randioo.mahjong_public_server.protocol.Gm.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.GmEnvVarsRequest)
  }
  
  public static final class GmEnvVarsResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use GmEnvVarsResponse.newBuilder() to construct.
    private GmEnvVarsResponse() {
      initFields();
    }
    private GmEnvVarsResponse(boolean noInit) {}
    
    private static final GmEnvVarsResponse defaultInstance;
    public static GmEnvVarsResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public GmEnvVarsResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.mahjong_public_server.protocol.Gm.internal_static_com_randioo_mahjong_public_server_protocol_GmEnvVarsResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.mahjong_public_server.protocol.Gm.internal_static_com_randioo_mahjong_public_server_protocol_GmEnvVarsResponse_fieldAccessorTable;
    }
    
    // optional int32 errorCode = 1 [default = 1];
    public static final int ERRORCODE_FIELD_NUMBER = 1;
    private boolean hasErrorCode;
    private int errorCode_ = 1;
    public boolean hasErrorCode() { return hasErrorCode; }
    public int getErrorCode() { return errorCode_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasErrorCode()) {
        output.writeInt32(1, getErrorCode());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasErrorCode()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getErrorCode());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsResponse result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsResponse();
        return builder;
      }
      
      protected com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsResponse.getDescriptor();
      }
      
      public com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsResponse getDefaultInstanceForType() {
        return com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsResponse) {
          return mergeFrom((com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsResponse other) {
        if (other == com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsResponse.getDefaultInstance()) return this;
        if (other.hasErrorCode()) {
          setErrorCode(other.getErrorCode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setErrorCode(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional int32 errorCode = 1 [default = 1];
      public boolean hasErrorCode() {
        return result.hasErrorCode();
      }
      public int getErrorCode() {
        return result.getErrorCode();
      }
      public Builder setErrorCode(int value) {
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder clearErrorCode() {
        result.hasErrorCode = false;
        result.errorCode_ = 1;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.GmEnvVarsResponse)
    }
    
    static {
      defaultInstance = new GmEnvVarsResponse(true);
      com.randioo.mahjong_public_server.protocol.Gm.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.GmEnvVarsResponse)
  }
  
  public static final class GmGameInfoRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use GmGameInfoRequest.newBuilder() to construct.
    private GmGameInfoRequest() {
      initFields();
    }
    private GmGameInfoRequest(boolean noInit) {}
    
    private static final GmGameInfoRequest defaultInstance;
    public static GmGameInfoRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public GmGameInfoRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.mahjong_public_server.protocol.Gm.internal_static_com_randioo_mahjong_public_server_protocol_GmGameInfoRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.mahjong_public_server.protocol.Gm.internal_static_com_randioo_mahjong_public_server_protocol_GmGameInfoRequest_fieldAccessorTable;
    }
    
    // optional string roomId = 1;
    public static final int ROOMID_FIELD_NUMBER = 1;
    private boolean hasRoomId;
    private java.lang.String roomId_ = "";
    public boolean hasRoomId() { return hasRoomId; }
    public java.lang.String getRoomId() { return roomId_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasRoomId()) {
        output.writeString(1, getRoomId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasRoomId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getRoomId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoRequest result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoRequest();
        return builder;
      }
      
      protected com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoRequest.getDescriptor();
      }
      
      public com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoRequest getDefaultInstanceForType() {
        return com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoRequest) {
          return mergeFrom((com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoRequest other) {
        if (other == com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoRequest.getDefaultInstance()) return this;
        if (other.hasRoomId()) {
          setRoomId(other.getRoomId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setRoomId(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional string roomId = 1;
      public boolean hasRoomId() {
        return result.hasRoomId();
      }
      public java.lang.String getRoomId() {
        return result.getRoomId();
      }
      public Builder setRoomId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasRoomId = true;
        result.roomId_ = value;
        return this;
      }
      public Builder clearRoomId() {
        result.hasRoomId = false;
        result.roomId_ = getDefaultInstance().getRoomId();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.GmGameInfoRequest)
    }
    
    static {
      defaultInstance = new GmGameInfoRequest(true);
      com.randioo.mahjong_public_server.protocol.Gm.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.GmGameInfoRequest)
  }
  
  public static final class GmGameInfoResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use GmGameInfoResponse.newBuilder() to construct.
    private GmGameInfoResponse() {
      initFields();
    }
    private GmGameInfoResponse(boolean noInit) {}
    
    private static final GmGameInfoResponse defaultInstance;
    public static GmGameInfoResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public GmGameInfoResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.mahjong_public_server.protocol.Gm.internal_static_com_randioo_mahjong_public_server_protocol_GmGameInfoResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.mahjong_public_server.protocol.Gm.internal_static_com_randioo_mahjong_public_server_protocol_GmGameInfoResponse_fieldAccessorTable;
    }
    
    // optional int32 errorCode = 1 [default = 1];
    public static final int ERRORCODE_FIELD_NUMBER = 1;
    private boolean hasErrorCode;
    private int errorCode_ = 1;
    public boolean hasErrorCode() { return hasErrorCode; }
    public int getErrorCode() { return errorCode_; }
    
    // repeated .com.randioo.mahjong_public_server.protocol.ClientCard clientCards = 2;
    public static final int CLIENTCARDS_FIELD_NUMBER = 2;
    private java.util.List<com.randioo.mahjong_public_server.protocol.Entity.ClientCard> clientCards_ =
      java.util.Collections.emptyList();
    public java.util.List<com.randioo.mahjong_public_server.protocol.Entity.ClientCard> getClientCardsList() {
      return clientCards_;
    }
    public int getClientCardsCount() { return clientCards_.size(); }
    public com.randioo.mahjong_public_server.protocol.Entity.ClientCard getClientCards(int index) {
      return clientCards_.get(index);
    }
    
    // repeated int32 remainCards = 3;
    public static final int REMAINCARDS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> remainCards_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getRemainCardsList() {
      return remainCards_;
    }
    public int getRemainCardsCount() { return remainCards_.size(); }
    public int getRemainCards(int index) {
      return remainCards_.get(index);
    }
    
    // repeated .com.randioo.mahjong_public_server.protocol.EnvVarsData envVarsData = 4;
    public static final int ENVVARSDATA_FIELD_NUMBER = 4;
    private java.util.List<com.randioo.mahjong_public_server.protocol.Entity.EnvVarsData> envVarsData_ =
      java.util.Collections.emptyList();
    public java.util.List<com.randioo.mahjong_public_server.protocol.Entity.EnvVarsData> getEnvVarsDataList() {
      return envVarsData_;
    }
    public int getEnvVarsDataCount() { return envVarsData_.size(); }
    public com.randioo.mahjong_public_server.protocol.Entity.EnvVarsData getEnvVarsData(int index) {
      return envVarsData_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasErrorCode()) {
        output.writeInt32(1, getErrorCode());
      }
      for (com.randioo.mahjong_public_server.protocol.Entity.ClientCard element : getClientCardsList()) {
        output.writeMessage(2, element);
      }
      for (int element : getRemainCardsList()) {
        output.writeInt32(3, element);
      }
      for (com.randioo.mahjong_public_server.protocol.Entity.EnvVarsData element : getEnvVarsDataList()) {
        output.writeMessage(4, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasErrorCode()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getErrorCode());
      }
      for (com.randioo.mahjong_public_server.protocol.Entity.ClientCard element : getClientCardsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      {
        int dataSize = 0;
        for (int element : getRemainCardsList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getRemainCardsList().size();
      }
      for (com.randioo.mahjong_public_server.protocol.Entity.EnvVarsData element : getEnvVarsDataList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoResponse result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoResponse();
        return builder;
      }
      
      protected com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoResponse.getDescriptor();
      }
      
      public com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoResponse getDefaultInstanceForType() {
        return com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.clientCards_ != java.util.Collections.EMPTY_LIST) {
          result.clientCards_ =
            java.util.Collections.unmodifiableList(result.clientCards_);
        }
        if (result.remainCards_ != java.util.Collections.EMPTY_LIST) {
          result.remainCards_ =
            java.util.Collections.unmodifiableList(result.remainCards_);
        }
        if (result.envVarsData_ != java.util.Collections.EMPTY_LIST) {
          result.envVarsData_ =
            java.util.Collections.unmodifiableList(result.envVarsData_);
        }
        com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoResponse) {
          return mergeFrom((com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoResponse other) {
        if (other == com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoResponse.getDefaultInstance()) return this;
        if (other.hasErrorCode()) {
          setErrorCode(other.getErrorCode());
        }
        if (!other.clientCards_.isEmpty()) {
          if (result.clientCards_.isEmpty()) {
            result.clientCards_ = new java.util.ArrayList<com.randioo.mahjong_public_server.protocol.Entity.ClientCard>();
          }
          result.clientCards_.addAll(other.clientCards_);
        }
        if (!other.remainCards_.isEmpty()) {
          if (result.remainCards_.isEmpty()) {
            result.remainCards_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.remainCards_.addAll(other.remainCards_);
        }
        if (!other.envVarsData_.isEmpty()) {
          if (result.envVarsData_.isEmpty()) {
            result.envVarsData_ = new java.util.ArrayList<com.randioo.mahjong_public_server.protocol.Entity.EnvVarsData>();
          }
          result.envVarsData_.addAll(other.envVarsData_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setErrorCode(input.readInt32());
              break;
            }
            case 18: {
              com.randioo.mahjong_public_server.protocol.Entity.ClientCard.Builder subBuilder = com.randioo.mahjong_public_server.protocol.Entity.ClientCard.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addClientCards(subBuilder.buildPartial());
              break;
            }
            case 24: {
              addRemainCards(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addRemainCards(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 34: {
              com.randioo.mahjong_public_server.protocol.Entity.EnvVarsData.Builder subBuilder = com.randioo.mahjong_public_server.protocol.Entity.EnvVarsData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addEnvVarsData(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional int32 errorCode = 1 [default = 1];
      public boolean hasErrorCode() {
        return result.hasErrorCode();
      }
      public int getErrorCode() {
        return result.getErrorCode();
      }
      public Builder setErrorCode(int value) {
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder clearErrorCode() {
        result.hasErrorCode = false;
        result.errorCode_ = 1;
        return this;
      }
      
      // repeated .com.randioo.mahjong_public_server.protocol.ClientCard clientCards = 2;
      public java.util.List<com.randioo.mahjong_public_server.protocol.Entity.ClientCard> getClientCardsList() {
        return java.util.Collections.unmodifiableList(result.clientCards_);
      }
      public int getClientCardsCount() {
        return result.getClientCardsCount();
      }
      public com.randioo.mahjong_public_server.protocol.Entity.ClientCard getClientCards(int index) {
        return result.getClientCards(index);
      }
      public Builder setClientCards(int index, com.randioo.mahjong_public_server.protocol.Entity.ClientCard value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.clientCards_.set(index, value);
        return this;
      }
      public Builder setClientCards(int index, com.randioo.mahjong_public_server.protocol.Entity.ClientCard.Builder builderForValue) {
        result.clientCards_.set(index, builderForValue.build());
        return this;
      }
      public Builder addClientCards(com.randioo.mahjong_public_server.protocol.Entity.ClientCard value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.clientCards_.isEmpty()) {
          result.clientCards_ = new java.util.ArrayList<com.randioo.mahjong_public_server.protocol.Entity.ClientCard>();
        }
        result.clientCards_.add(value);
        return this;
      }
      public Builder addClientCards(com.randioo.mahjong_public_server.protocol.Entity.ClientCard.Builder builderForValue) {
        if (result.clientCards_.isEmpty()) {
          result.clientCards_ = new java.util.ArrayList<com.randioo.mahjong_public_server.protocol.Entity.ClientCard>();
        }
        result.clientCards_.add(builderForValue.build());
        return this;
      }
      public Builder addAllClientCards(
          java.lang.Iterable<? extends com.randioo.mahjong_public_server.protocol.Entity.ClientCard> values) {
        if (result.clientCards_.isEmpty()) {
          result.clientCards_ = new java.util.ArrayList<com.randioo.mahjong_public_server.protocol.Entity.ClientCard>();
        }
        super.addAll(values, result.clientCards_);
        return this;
      }
      public Builder clearClientCards() {
        result.clientCards_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated int32 remainCards = 3;
      public java.util.List<java.lang.Integer> getRemainCardsList() {
        return java.util.Collections.unmodifiableList(result.remainCards_);
      }
      public int getRemainCardsCount() {
        return result.getRemainCardsCount();
      }
      public int getRemainCards(int index) {
        return result.getRemainCards(index);
      }
      public Builder setRemainCards(int index, int value) {
        result.remainCards_.set(index, value);
        return this;
      }
      public Builder addRemainCards(int value) {
        if (result.remainCards_.isEmpty()) {
          result.remainCards_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.remainCards_.add(value);
        return this;
      }
      public Builder addAllRemainCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.remainCards_.isEmpty()) {
          result.remainCards_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.remainCards_);
        return this;
      }
      public Builder clearRemainCards() {
        result.remainCards_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .com.randioo.mahjong_public_server.protocol.EnvVarsData envVarsData = 4;
      public java.util.List<com.randioo.mahjong_public_server.protocol.Entity.EnvVarsData> getEnvVarsDataList() {
        return java.util.Collections.unmodifiableList(result.envVarsData_);
      }
      public int getEnvVarsDataCount() {
        return result.getEnvVarsDataCount();
      }
      public com.randioo.mahjong_public_server.protocol.Entity.EnvVarsData getEnvVarsData(int index) {
        return result.getEnvVarsData(index);
      }
      public Builder setEnvVarsData(int index, com.randioo.mahjong_public_server.protocol.Entity.EnvVarsData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.envVarsData_.set(index, value);
        return this;
      }
      public Builder setEnvVarsData(int index, com.randioo.mahjong_public_server.protocol.Entity.EnvVarsData.Builder builderForValue) {
        result.envVarsData_.set(index, builderForValue.build());
        return this;
      }
      public Builder addEnvVarsData(com.randioo.mahjong_public_server.protocol.Entity.EnvVarsData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.envVarsData_.isEmpty()) {
          result.envVarsData_ = new java.util.ArrayList<com.randioo.mahjong_public_server.protocol.Entity.EnvVarsData>();
        }
        result.envVarsData_.add(value);
        return this;
      }
      public Builder addEnvVarsData(com.randioo.mahjong_public_server.protocol.Entity.EnvVarsData.Builder builderForValue) {
        if (result.envVarsData_.isEmpty()) {
          result.envVarsData_ = new java.util.ArrayList<com.randioo.mahjong_public_server.protocol.Entity.EnvVarsData>();
        }
        result.envVarsData_.add(builderForValue.build());
        return this;
      }
      public Builder addAllEnvVarsData(
          java.lang.Iterable<? extends com.randioo.mahjong_public_server.protocol.Entity.EnvVarsData> values) {
        if (result.envVarsData_.isEmpty()) {
          result.envVarsData_ = new java.util.ArrayList<com.randioo.mahjong_public_server.protocol.Entity.EnvVarsData>();
        }
        super.addAll(values, result.envVarsData_);
        return this;
      }
      public Builder clearEnvVarsData() {
        result.envVarsData_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.GmGameInfoResponse)
    }
    
    static {
      defaultInstance = new GmGameInfoResponse(true);
      com.randioo.mahjong_public_server.protocol.Gm.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.GmGameInfoResponse)
  }
  
  public static final class GmDispatchCardRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use GmDispatchCardRequest.newBuilder() to construct.
    private GmDispatchCardRequest() {
      initFields();
    }
    private GmDispatchCardRequest(boolean noInit) {}
    
    private static final GmDispatchCardRequest defaultInstance;
    public static GmDispatchCardRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public GmDispatchCardRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.mahjong_public_server.protocol.Gm.internal_static_com_randioo_mahjong_public_server_protocol_GmDispatchCardRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.mahjong_public_server.protocol.Gm.internal_static_com_randioo_mahjong_public_server_protocol_GmDispatchCardRequest_fieldAccessorTable;
    }
    
    // optional string roomId = 1;
    public static final int ROOMID_FIELD_NUMBER = 1;
    private boolean hasRoomId;
    private java.lang.String roomId_ = "";
    public boolean hasRoomId() { return hasRoomId; }
    public java.lang.String getRoomId() { return roomId_; }
    
    // repeated .com.randioo.mahjong_public_server.protocol.ClientCard clientCards = 2;
    public static final int CLIENTCARDS_FIELD_NUMBER = 2;
    private java.util.List<com.randioo.mahjong_public_server.protocol.Entity.ClientCard> clientCards_ =
      java.util.Collections.emptyList();
    public java.util.List<com.randioo.mahjong_public_server.protocol.Entity.ClientCard> getClientCardsList() {
      return clientCards_;
    }
    public int getClientCardsCount() { return clientCards_.size(); }
    public com.randioo.mahjong_public_server.protocol.Entity.ClientCard getClientCards(int index) {
      return clientCards_.get(index);
    }
    
    // repeated int32 remainCards = 3;
    public static final int REMAINCARDS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> remainCards_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getRemainCardsList() {
      return remainCards_;
    }
    public int getRemainCardsCount() { return remainCards_.size(); }
    public int getRemainCards(int index) {
      return remainCards_.get(index);
    }
    
    // optional int32 remainCardCount = 4;
    public static final int REMAINCARDCOUNT_FIELD_NUMBER = 4;
    private boolean hasRemainCardCount;
    private int remainCardCount_ = 0;
    public boolean hasRemainCardCount() { return hasRemainCardCount; }
    public int getRemainCardCount() { return remainCardCount_; }
    
    // optional bool remainCardBoolean = 5;
    public static final int REMAINCARDBOOLEAN_FIELD_NUMBER = 5;
    private boolean hasRemainCardBoolean;
    private boolean remainCardBoolean_ = false;
    public boolean hasRemainCardBoolean() { return hasRemainCardBoolean; }
    public boolean getRemainCardBoolean() { return remainCardBoolean_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasRoomId()) {
        output.writeString(1, getRoomId());
      }
      for (com.randioo.mahjong_public_server.protocol.Entity.ClientCard element : getClientCardsList()) {
        output.writeMessage(2, element);
      }
      for (int element : getRemainCardsList()) {
        output.writeInt32(3, element);
      }
      if (hasRemainCardCount()) {
        output.writeInt32(4, getRemainCardCount());
      }
      if (hasRemainCardBoolean()) {
        output.writeBool(5, getRemainCardBoolean());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasRoomId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getRoomId());
      }
      for (com.randioo.mahjong_public_server.protocol.Entity.ClientCard element : getClientCardsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      {
        int dataSize = 0;
        for (int element : getRemainCardsList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getRemainCardsList().size();
      }
      if (hasRemainCardCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getRemainCardCount());
      }
      if (hasRemainCardBoolean()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, getRemainCardBoolean());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardRequest result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardRequest();
        return builder;
      }
      
      protected com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardRequest.getDescriptor();
      }
      
      public com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardRequest getDefaultInstanceForType() {
        return com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.clientCards_ != java.util.Collections.EMPTY_LIST) {
          result.clientCards_ =
            java.util.Collections.unmodifiableList(result.clientCards_);
        }
        if (result.remainCards_ != java.util.Collections.EMPTY_LIST) {
          result.remainCards_ =
            java.util.Collections.unmodifiableList(result.remainCards_);
        }
        com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardRequest) {
          return mergeFrom((com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardRequest other) {
        if (other == com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardRequest.getDefaultInstance()) return this;
        if (other.hasRoomId()) {
          setRoomId(other.getRoomId());
        }
        if (!other.clientCards_.isEmpty()) {
          if (result.clientCards_.isEmpty()) {
            result.clientCards_ = new java.util.ArrayList<com.randioo.mahjong_public_server.protocol.Entity.ClientCard>();
          }
          result.clientCards_.addAll(other.clientCards_);
        }
        if (!other.remainCards_.isEmpty()) {
          if (result.remainCards_.isEmpty()) {
            result.remainCards_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.remainCards_.addAll(other.remainCards_);
        }
        if (other.hasRemainCardCount()) {
          setRemainCardCount(other.getRemainCardCount());
        }
        if (other.hasRemainCardBoolean()) {
          setRemainCardBoolean(other.getRemainCardBoolean());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setRoomId(input.readString());
              break;
            }
            case 18: {
              com.randioo.mahjong_public_server.protocol.Entity.ClientCard.Builder subBuilder = com.randioo.mahjong_public_server.protocol.Entity.ClientCard.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addClientCards(subBuilder.buildPartial());
              break;
            }
            case 24: {
              addRemainCards(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addRemainCards(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              setRemainCardCount(input.readInt32());
              break;
            }
            case 40: {
              setRemainCardBoolean(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // optional string roomId = 1;
      public boolean hasRoomId() {
        return result.hasRoomId();
      }
      public java.lang.String getRoomId() {
        return result.getRoomId();
      }
      public Builder setRoomId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasRoomId = true;
        result.roomId_ = value;
        return this;
      }
      public Builder clearRoomId() {
        result.hasRoomId = false;
        result.roomId_ = getDefaultInstance().getRoomId();
        return this;
      }
      
      // repeated .com.randioo.mahjong_public_server.protocol.ClientCard clientCards = 2;
      public java.util.List<com.randioo.mahjong_public_server.protocol.Entity.ClientCard> getClientCardsList() {
        return java.util.Collections.unmodifiableList(result.clientCards_);
      }
      public int getClientCardsCount() {
        return result.getClientCardsCount();
      }
      public com.randioo.mahjong_public_server.protocol.Entity.ClientCard getClientCards(int index) {
        return result.getClientCards(index);
      }
      public Builder setClientCards(int index, com.randioo.mahjong_public_server.protocol.Entity.ClientCard value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.clientCards_.set(index, value);
        return this;
      }
      public Builder setClientCards(int index, com.randioo.mahjong_public_server.protocol.Entity.ClientCard.Builder builderForValue) {
        result.clientCards_.set(index, builderForValue.build());
        return this;
      }
      public Builder addClientCards(com.randioo.mahjong_public_server.protocol.Entity.ClientCard value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.clientCards_.isEmpty()) {
          result.clientCards_ = new java.util.ArrayList<com.randioo.mahjong_public_server.protocol.Entity.ClientCard>();
        }
        result.clientCards_.add(value);
        return this;
      }
      public Builder addClientCards(com.randioo.mahjong_public_server.protocol.Entity.ClientCard.Builder builderForValue) {
        if (result.clientCards_.isEmpty()) {
          result.clientCards_ = new java.util.ArrayList<com.randioo.mahjong_public_server.protocol.Entity.ClientCard>();
        }
        result.clientCards_.add(builderForValue.build());
        return this;
      }
      public Builder addAllClientCards(
          java.lang.Iterable<? extends com.randioo.mahjong_public_server.protocol.Entity.ClientCard> values) {
        if (result.clientCards_.isEmpty()) {
          result.clientCards_ = new java.util.ArrayList<com.randioo.mahjong_public_server.protocol.Entity.ClientCard>();
        }
        super.addAll(values, result.clientCards_);
        return this;
      }
      public Builder clearClientCards() {
        result.clientCards_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated int32 remainCards = 3;
      public java.util.List<java.lang.Integer> getRemainCardsList() {
        return java.util.Collections.unmodifiableList(result.remainCards_);
      }
      public int getRemainCardsCount() {
        return result.getRemainCardsCount();
      }
      public int getRemainCards(int index) {
        return result.getRemainCards(index);
      }
      public Builder setRemainCards(int index, int value) {
        result.remainCards_.set(index, value);
        return this;
      }
      public Builder addRemainCards(int value) {
        if (result.remainCards_.isEmpty()) {
          result.remainCards_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.remainCards_.add(value);
        return this;
      }
      public Builder addAllRemainCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.remainCards_.isEmpty()) {
          result.remainCards_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.remainCards_);
        return this;
      }
      public Builder clearRemainCards() {
        result.remainCards_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional int32 remainCardCount = 4;
      public boolean hasRemainCardCount() {
        return result.hasRemainCardCount();
      }
      public int getRemainCardCount() {
        return result.getRemainCardCount();
      }
      public Builder setRemainCardCount(int value) {
        result.hasRemainCardCount = true;
        result.remainCardCount_ = value;
        return this;
      }
      public Builder clearRemainCardCount() {
        result.hasRemainCardCount = false;
        result.remainCardCount_ = 0;
        return this;
      }
      
      // optional bool remainCardBoolean = 5;
      public boolean hasRemainCardBoolean() {
        return result.hasRemainCardBoolean();
      }
      public boolean getRemainCardBoolean() {
        return result.getRemainCardBoolean();
      }
      public Builder setRemainCardBoolean(boolean value) {
        result.hasRemainCardBoolean = true;
        result.remainCardBoolean_ = value;
        return this;
      }
      public Builder clearRemainCardBoolean() {
        result.hasRemainCardBoolean = false;
        result.remainCardBoolean_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.GmDispatchCardRequest)
    }
    
    static {
      defaultInstance = new GmDispatchCardRequest(true);
      com.randioo.mahjong_public_server.protocol.Gm.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.GmDispatchCardRequest)
  }
  
  public static final class GmDispatchCardResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use GmDispatchCardResponse.newBuilder() to construct.
    private GmDispatchCardResponse() {
      initFields();
    }
    private GmDispatchCardResponse(boolean noInit) {}
    
    private static final GmDispatchCardResponse defaultInstance;
    public static GmDispatchCardResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public GmDispatchCardResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.mahjong_public_server.protocol.Gm.internal_static_com_randioo_mahjong_public_server_protocol_GmDispatchCardResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.mahjong_public_server.protocol.Gm.internal_static_com_randioo_mahjong_public_server_protocol_GmDispatchCardResponse_fieldAccessorTable;
    }
    
    // optional int32 errorCode = 1 [default = 1];
    public static final int ERRORCODE_FIELD_NUMBER = 1;
    private boolean hasErrorCode;
    private int errorCode_ = 1;
    public boolean hasErrorCode() { return hasErrorCode; }
    public int getErrorCode() { return errorCode_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasErrorCode()) {
        output.writeInt32(1, getErrorCode());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasErrorCode()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getErrorCode());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardResponse result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardResponse();
        return builder;
      }
      
      protected com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardResponse.getDescriptor();
      }
      
      public com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardResponse getDefaultInstanceForType() {
        return com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardResponse) {
          return mergeFrom((com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardResponse other) {
        if (other == com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardResponse.getDefaultInstance()) return this;
        if (other.hasErrorCode()) {
          setErrorCode(other.getErrorCode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setErrorCode(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional int32 errorCode = 1 [default = 1];
      public boolean hasErrorCode() {
        return result.hasErrorCode();
      }
      public int getErrorCode() {
        return result.getErrorCode();
      }
      public Builder setErrorCode(int value) {
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder clearErrorCode() {
        result.hasErrorCode = false;
        result.errorCode_ = 1;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.GmDispatchCardResponse)
    }
    
    static {
      defaultInstance = new GmDispatchCardResponse(true);
      com.randioo.mahjong_public_server.protocol.Gm.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.GmDispatchCardResponse)
  }
  
  public static final class GmRoundRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use GmRoundRequest.newBuilder() to construct.
    private GmRoundRequest() {
      initFields();
    }
    private GmRoundRequest(boolean noInit) {}
    
    private static final GmRoundRequest defaultInstance;
    public static GmRoundRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public GmRoundRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.mahjong_public_server.protocol.Gm.internal_static_com_randioo_mahjong_public_server_protocol_GmRoundRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.mahjong_public_server.protocol.Gm.internal_static_com_randioo_mahjong_public_server_protocol_GmRoundRequest_fieldAccessorTable;
    }
    
    // optional string roomId = 1;
    public static final int ROOMID_FIELD_NUMBER = 1;
    private boolean hasRoomId;
    private java.lang.String roomId_ = "";
    public boolean hasRoomId() { return hasRoomId; }
    public java.lang.String getRoomId() { return roomId_; }
    
    // optional int32 remainRound = 2;
    public static final int REMAINROUND_FIELD_NUMBER = 2;
    private boolean hasRemainRound;
    private int remainRound_ = 0;
    public boolean hasRemainRound() { return hasRemainRound; }
    public int getRemainRound() { return remainRound_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasRoomId()) {
        output.writeString(1, getRoomId());
      }
      if (hasRemainRound()) {
        output.writeInt32(2, getRemainRound());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasRoomId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getRoomId());
      }
      if (hasRemainRound()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getRemainRound());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.mahjong_public_server.protocol.Gm.GmRoundRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmRoundRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmRoundRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmRoundRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmRoundRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmRoundRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmRoundRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmRoundRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmRoundRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmRoundRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.mahjong_public_server.protocol.Gm.GmRoundRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.mahjong_public_server.protocol.Gm.GmRoundRequest result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Gm.GmRoundRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.mahjong_public_server.protocol.Gm.GmRoundRequest();
        return builder;
      }
      
      protected com.randioo.mahjong_public_server.protocol.Gm.GmRoundRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.mahjong_public_server.protocol.Gm.GmRoundRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.mahjong_public_server.protocol.Gm.GmRoundRequest.getDescriptor();
      }
      
      public com.randioo.mahjong_public_server.protocol.Gm.GmRoundRequest getDefaultInstanceForType() {
        return com.randioo.mahjong_public_server.protocol.Gm.GmRoundRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.mahjong_public_server.protocol.Gm.GmRoundRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.mahjong_public_server.protocol.Gm.GmRoundRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.mahjong_public_server.protocol.Gm.GmRoundRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.mahjong_public_server.protocol.Gm.GmRoundRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.mahjong_public_server.protocol.Gm.GmRoundRequest) {
          return mergeFrom((com.randioo.mahjong_public_server.protocol.Gm.GmRoundRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.mahjong_public_server.protocol.Gm.GmRoundRequest other) {
        if (other == com.randioo.mahjong_public_server.protocol.Gm.GmRoundRequest.getDefaultInstance()) return this;
        if (other.hasRoomId()) {
          setRoomId(other.getRoomId());
        }
        if (other.hasRemainRound()) {
          setRemainRound(other.getRemainRound());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setRoomId(input.readString());
              break;
            }
            case 16: {
              setRemainRound(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional string roomId = 1;
      public boolean hasRoomId() {
        return result.hasRoomId();
      }
      public java.lang.String getRoomId() {
        return result.getRoomId();
      }
      public Builder setRoomId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasRoomId = true;
        result.roomId_ = value;
        return this;
      }
      public Builder clearRoomId() {
        result.hasRoomId = false;
        result.roomId_ = getDefaultInstance().getRoomId();
        return this;
      }
      
      // optional int32 remainRound = 2;
      public boolean hasRemainRound() {
        return result.hasRemainRound();
      }
      public int getRemainRound() {
        return result.getRemainRound();
      }
      public Builder setRemainRound(int value) {
        result.hasRemainRound = true;
        result.remainRound_ = value;
        return this;
      }
      public Builder clearRemainRound() {
        result.hasRemainRound = false;
        result.remainRound_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.GmRoundRequest)
    }
    
    static {
      defaultInstance = new GmRoundRequest(true);
      com.randioo.mahjong_public_server.protocol.Gm.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.GmRoundRequest)
  }
  
  public static final class GmRoundResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use GmRoundResponse.newBuilder() to construct.
    private GmRoundResponse() {
      initFields();
    }
    private GmRoundResponse(boolean noInit) {}
    
    private static final GmRoundResponse defaultInstance;
    public static GmRoundResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public GmRoundResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.mahjong_public_server.protocol.Gm.internal_static_com_randioo_mahjong_public_server_protocol_GmRoundResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.mahjong_public_server.protocol.Gm.internal_static_com_randioo_mahjong_public_server_protocol_GmRoundResponse_fieldAccessorTable;
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.mahjong_public_server.protocol.Gm.GmRoundResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmRoundResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmRoundResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmRoundResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmRoundResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmRoundResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmRoundResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmRoundResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmRoundResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Gm.GmRoundResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.mahjong_public_server.protocol.Gm.GmRoundResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.mahjong_public_server.protocol.Gm.GmRoundResponse result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Gm.GmRoundResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.mahjong_public_server.protocol.Gm.GmRoundResponse();
        return builder;
      }
      
      protected com.randioo.mahjong_public_server.protocol.Gm.GmRoundResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.mahjong_public_server.protocol.Gm.GmRoundResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.mahjong_public_server.protocol.Gm.GmRoundResponse.getDescriptor();
      }
      
      public com.randioo.mahjong_public_server.protocol.Gm.GmRoundResponse getDefaultInstanceForType() {
        return com.randioo.mahjong_public_server.protocol.Gm.GmRoundResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.mahjong_public_server.protocol.Gm.GmRoundResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.mahjong_public_server.protocol.Gm.GmRoundResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.mahjong_public_server.protocol.Gm.GmRoundResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.mahjong_public_server.protocol.Gm.GmRoundResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.mahjong_public_server.protocol.Gm.GmRoundResponse) {
          return mergeFrom((com.randioo.mahjong_public_server.protocol.Gm.GmRoundResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.mahjong_public_server.protocol.Gm.GmRoundResponse other) {
        if (other == com.randioo.mahjong_public_server.protocol.Gm.GmRoundResponse.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.GmRoundResponse)
    }
    
    static {
      defaultInstance = new GmRoundResponse(true);
      com.randioo.mahjong_public_server.protocol.Gm.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.GmRoundResponse)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_GmEnvVarsRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_GmEnvVarsRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_GmEnvVarsResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_GmEnvVarsResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_GmGameInfoRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_GmGameInfoRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_GmGameInfoResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_GmGameInfoResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_GmDispatchCardRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_GmDispatchCardRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_GmDispatchCardResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_GmDispatchCardResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_GmRoundRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_GmRoundRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_GmRoundResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_GmRoundResponse_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\010Gm.proto\022*com.randioo.mahjong_public_s" +
      "erver.protocol\032\014Entity.proto\"p\n\020GmEnvVar" +
      "sRequest\022\016\n\006roomId\030\001 \001(\t\022L\n\013envVarsData\030" +
      "\002 \003(\01327.com.randioo.mahjong_public_serve" +
      "r.protocol.EnvVarsData\")\n\021GmEnvVarsRespo" +
      "nse\022\024\n\terrorCode\030\001 \001(\005:\0011\"#\n\021GmGameInfoR" +
      "equest\022\016\n\006roomId\030\001 \001(\t\"\332\001\n\022GmGameInfoRes" +
      "ponse\022\024\n\terrorCode\030\001 \001(\005:\0011\022K\n\013clientCar" +
      "ds\030\002 \003(\01326.com.randioo.mahjong_public_se" +
      "rver.protocol.ClientCard\022\023\n\013remainCards\030",
      "\003 \003(\005\022L\n\013envVarsData\030\004 \003(\01327.com.randioo" +
      ".mahjong_public_server.protocol.EnvVarsD" +
      "ata\"\275\001\n\025GmDispatchCardRequest\022\016\n\006roomId\030" +
      "\001 \001(\t\022K\n\013clientCards\030\002 \003(\01326.com.randioo" +
      ".mahjong_public_server.protocol.ClientCa" +
      "rd\022\023\n\013remainCards\030\003 \003(\005\022\027\n\017remainCardCou" +
      "nt\030\004 \001(\005\022\031\n\021remainCardBoolean\030\005 \001(\010\".\n\026G" +
      "mDispatchCardResponse\022\024\n\terrorCode\030\001 \001(\005" +
      ":\0011\"5\n\016GmRoundRequest\022\016\n\006roomId\030\001 \001(\t\022\023\n" +
      "\013remainRound\030\002 \001(\005\"\021\n\017GmRoundResponse"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_randioo_mahjong_public_server_protocol_GmEnvVarsRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_randioo_mahjong_public_server_protocol_GmEnvVarsRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_GmEnvVarsRequest_descriptor,
              new java.lang.String[] { "RoomId", "EnvVarsData", },
              com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsRequest.class,
              com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsRequest.Builder.class);
          internal_static_com_randioo_mahjong_public_server_protocol_GmEnvVarsResponse_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_randioo_mahjong_public_server_protocol_GmEnvVarsResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_GmEnvVarsResponse_descriptor,
              new java.lang.String[] { "ErrorCode", },
              com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsResponse.class,
              com.randioo.mahjong_public_server.protocol.Gm.GmEnvVarsResponse.Builder.class);
          internal_static_com_randioo_mahjong_public_server_protocol_GmGameInfoRequest_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_randioo_mahjong_public_server_protocol_GmGameInfoRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_GmGameInfoRequest_descriptor,
              new java.lang.String[] { "RoomId", },
              com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoRequest.class,
              com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoRequest.Builder.class);
          internal_static_com_randioo_mahjong_public_server_protocol_GmGameInfoResponse_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_randioo_mahjong_public_server_protocol_GmGameInfoResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_GmGameInfoResponse_descriptor,
              new java.lang.String[] { "ErrorCode", "ClientCards", "RemainCards", "EnvVarsData", },
              com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoResponse.class,
              com.randioo.mahjong_public_server.protocol.Gm.GmGameInfoResponse.Builder.class);
          internal_static_com_randioo_mahjong_public_server_protocol_GmDispatchCardRequest_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_com_randioo_mahjong_public_server_protocol_GmDispatchCardRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_GmDispatchCardRequest_descriptor,
              new java.lang.String[] { "RoomId", "ClientCards", "RemainCards", "RemainCardCount", "RemainCardBoolean", },
              com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardRequest.class,
              com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardRequest.Builder.class);
          internal_static_com_randioo_mahjong_public_server_protocol_GmDispatchCardResponse_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_com_randioo_mahjong_public_server_protocol_GmDispatchCardResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_GmDispatchCardResponse_descriptor,
              new java.lang.String[] { "ErrorCode", },
              com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardResponse.class,
              com.randioo.mahjong_public_server.protocol.Gm.GmDispatchCardResponse.Builder.class);
          internal_static_com_randioo_mahjong_public_server_protocol_GmRoundRequest_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_com_randioo_mahjong_public_server_protocol_GmRoundRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_GmRoundRequest_descriptor,
              new java.lang.String[] { "RoomId", "RemainRound", },
              com.randioo.mahjong_public_server.protocol.Gm.GmRoundRequest.class,
              com.randioo.mahjong_public_server.protocol.Gm.GmRoundRequest.Builder.class);
          internal_static_com_randioo_mahjong_public_server_protocol_GmRoundResponse_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_com_randioo_mahjong_public_server_protocol_GmRoundResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_GmRoundResponse_descriptor,
              new java.lang.String[] { },
              com.randioo.mahjong_public_server.protocol.Gm.GmRoundResponse.class,
              com.randioo.mahjong_public_server.protocol.Gm.GmRoundResponse.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.randioo.mahjong_public_server.protocol.Entity.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
